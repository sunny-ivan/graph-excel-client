name: Generate SDK Weekly

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1" # This cron schedule runs the workflow every Monday at midnight

jobs:
  generate_sdk:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get sha of remote files
        id: remote_apisha
        run: |
          remote_apisha=$( gh api repos/microsoftgraph/msgraph-metadata/commits?path=/openapi/v1.0/openapi.yaml | \
          python3 -c "import sys, json; print(json.load(sys.stdin)[0]['sha'])")
          echo "remote_apisha=$remote_apisha" >> $GITHUB_OUTPUT
          echo "$remote_apisha"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get sha of local file
        id: local_apisha
        run: |
          LOCAL_FILE="data/openapi.sha"
          local_apisha="empty"
          if test -f $LOCAL_FILE; then
            local_apisha=$(cat $LOCAL_FILE)
            echo "local_apisha=$local_apisha" >> $GITHUB_OUTPUT
          else
            echo "SHA file does not exist, it will be created later."
          fi
          echo "$local_apisha"

      - name: Compare files
        run: |
          if [ "${{ steps.remote_apisha.outputs.remote_apisha }}" == "${{ steps.local_apisha.outputs.local_apisha }}" ]; then
            echo "Local file is the latest version"
          else
            echo "Local file is not the latest version"
            mkdir -p data && cd data
            curl --location --output openapi.yaml https://aka.ms/graph/v1.0/openapi.yaml
            echo "${{ steps.remote_apisha.outputs.remote_apisha }}" >> openapi.sha
            cd ..
          fi

      # - name: Setup Node.js environment
      #   uses: actions/setup-node@v4.0.2
      #   with:
      #     node-version: "latest"

      # - name: Generate SDK
      #   run: bash generate_sdk.sh

      - name: Set identity
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR_ID+$GITHUB_ACTOR@example.com"
          echo Commit as "$GITHUB_ACTOR <$GITHUB_ACTOR_ID+$GITHUB_ACTOR@example.com>"

      - name: Commit changes
        run: |
          git add .
          git commit -m "Automatic SDK generation"
          git push https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git HEAD:main
